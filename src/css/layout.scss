.container {
    --offset-left: 30px;
    --offset-right: 30px;
    max-width: $container;
    width: 100%;
    margin: 0 auto;
    padding: 0 30px;
}

.overscroll-behavior-y-contain {
    overscroll-behavior-y: contain;
}

.reserve-scrollbar {
    scrollbar-gutter: stable;
}

.position-relative {
    position: relative;
}

.scroll-smooth {
    scroll-behavior: smooth;
}

.min-width {
    width: fit-content;
}

.w-fit {
    width: fit-content;
}

.top-0 {
    top: 0;
}

.top-98 {
    top: 98%;
}

.top-99 {
    top: 99%;
}

.top-100 {
    top: 100%;
}

.left-0 {
    left: 0;
}

.right-0 {
    right: 0;
}

.bottom-0 {
    bottom: 0;
}

.grow-1 {
    flex-grow: 1;
}

.flex-0 {
    flex: 0;
}

.flex-half {
    flex: 0 0 calc(50% - var(--grid-gap-offset, 0) / 2);
}

.\!flex-0 {
    flex: 0 !important;
}

.flex-1 {
    flex: 1;
}

.flex-100 {
    flex: 0 0 100%;
}

.\!min-h-auto {
    min-height: auto !important;
}

.min-h-18 {
    min-height: 18px;
}

.min-h-44 {
    min-height: 44px;
}

.min-h-auto {
    min-height: auto;
}

.min-h-fit {
    min-height: fit-content;
}

.min-h-window-height {
    min-height: 100vh;
}

.rounded {
    border-radius: 99999999px;
}

.inline-block {
    display: inline-block;
}

.visible {
    visibility: visible;
}

.separator {
    opacity: 0.3;
    border: 1px solid #FFFFFF;
}

.separator-light {
    opacity: 0.1;
    border: 1px solid #85798D;
}

.vertical-separator {
    opacity: 0.1;
    border: 1px solid #FFFFFF;
}

.row.row-cols-3 {
    .col {
        width: 33.33%;
    }
}

.\!w-16 {
    width: 16px !important;
}

.w-1 {
    width: 1%;
}

.w-5 {
    width: 5%;
}

.w-1\/4 {
    width: 25%;
}

.w-2\/4 {
    width: 50%;
}

.w-3\/4 {
    width: 75%;
}

.w-4\/4,
.w-full {
    width: 100%;
}

.w-1\/6 {
    width: 17%;
}

.\!w-1\/3 {
    width: 33.33% !important;
}

.w-5\/6 {
    width: 83%;
}

.w-46 {
    width: 46px;
}

.w-max {
    width: max-content;
}

.full-height--15 {
    height: calc(100% - 15px);
}

.h-21 {
    height: 21px;
}

.\!h-16 {
    height: 16px !important;
}

.hv-1\/2 {
    height: 50vh;
}

.hv-3\/5 {
    height: 60vh;
}

.hv-7\/10 {
    height: 70vh;
}

.hv-4\/5 {
    height: 80vh;
}

.fixed {
    position: fixed;
}

.max-w-full {
    max-width: 100%;
}

.max-w-screen {
    max-width: 100vw;
}


.max-w-582 {
    max-width: 582px;
}

.max-w-600 {
    max-width: 600px;
}

.max-w-316 {
    max-width: 316px;
}

.max-h-360 {
    max-height: 360px;
}

.min-w-36 {
    min-width: 36px;
}

.min-w-440 {
    min-width: 440px;
}

.min-w-60 {
    min-width: 60px;
}

.z-1 {
    z-index: 1;
}

.z-10 {
    z-index: 10;
}

.z-20 {
    z-index: 20 !important;
}

.z-30 {
    z-index: 30;
}

.-z-1 {
    z-index: -1;
}

.sticky-bottom {
    position: sticky;
    left: 0;
    right: 0;
    bottom: 0;
}

.absolute-bottom {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
}

.absolute-bottom-right {
    position: absolute;
    right: 0;
    bottom: 0;
}

.absolute-center-right {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
}

.q-px-select-20 {
    margin-left: -20px;
    width: calc(100% + 40px);
    margin-right: -20px;

    .q-field__control {
        padding-left: 20px;
        padding-right: 20px;
    }
}

.q-px-select-0 {
    .q-field__control {
        padding-left: 20px;
        padding-right: 20px;
    }
}

.object-top {
    object-position: top;
}

.object-cover {
    object-fit: cover;
}

.bg-cover {
    background-size: cover;
}

.bg-center {
    background-position: center;
}

.\!bg-center {
    background-position: center !important;
}

.\!bg-cover {
    background-size: cover !important;
}

.overflow-down {

    &,
    * {
        overflow: visible;
    }
}

.visibility-collapse {
    visibility: collapse;
}

.\!absolute-full {
    position: absolute !important;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
}

.\!flex {
    display: flex !important;
}

.\!q-pt-0 {
    padding-top: 0 !important;
}

.grid {
    display: grid;
}

.\!q-pr-32 {
    padding-right: 32px !important;
}

@for $border from 0 to 10 {
    $val: $border * 5;

    .rounded-#{$val} {
        border-radius: #{$val}px;
    }

    .\!rounded-#{$val} {
        border-radius: #{$val}px !important;
    }
}

@each $k,
$s in $custom-sizes {
    .s-#{$k} {
        width: $s;
        height: $s;
    }

    .min-s-#{$k} {
        min-width: $s;
        min-height: $s;
    }

    .h-#{$k} {
        height: $s;
    }

    .-right-#{$k}{
        right: -$s;
    }

    .right-#{$k}{
        right: $s;
    }

    .grid-gap-#{$k} {
        --grid-gap-offset: #{$s};
        gap: $s;
    }

    .grid-cols-#{$k} {
        grid-template-columns: repeat($k, minmax(0, 1fr))
    }

    .col-span-#{$k} {
        grid-column: span $k / span $k;
    }

    .col-start-#{$k} {
        grid-column-start: $k !important;
    }

    .col-start-span-#{$k} {
        grid-column-start: span $k !important;
    }

    .col-end-#{$k} {
        grid-column-end: $k !important;
    }
}

@media screen and (min-height: 600px) {
    .vertical-sm-absolute {
        position: absolute;
    }

    .vertical-sm-window-height {
        height: 100vh;
    }

    .vertical-sm-fixed {
        position: fixed;
    }
}

@media screen and (max-height: 600px) {
    .q-mt-vsm-40 {
        margin-top: 40px;
    }
}

@media screen and (max-width: $breakpoint-xs) {
    .row-xs {
        flex-direction: row !important;
    }

    .block-xs {
        display: block !important;
    }

    .flex-xs {
        display: flex !important;
    }

    .justify-end-xs {
        justify-content: flex-end !important;
    }

    .bottom-xs-0 {
        bottom: 0 !important;
    }

    .relative-xs {
        position: relative !important;
    }

    .fixed-xs {
        position: fixed !important;
    }

    .sticky-xs {
        position: sticky !important;
    }

    .fit-content-xs {
        width: fit-content !important;
    }

    .q-px-xs-0 {
        padding-left: 0;
        padding-right: 0;
    }

    .q-px-xs-10 {
        padding-left: 10px;
        padding-right: 10px;
    }

    .q-px-xs-20 {
        padding-left: 20px;
        padding-right: 20px;
    }

    .q-px-xs-28 {
        padding-left: 28px;
        padding-right: 28px;
    }

    .q-py-xs-20 {
        padding-top: 20px;
        padding-bottom: 20px;
    }

    .q-pt-xs-40 {
        padding-top: 40px;
    }

    .q-px-xs-70 {
        padding-left: 70px;
        padding-right: 70px;
    }

    .q-ml-xs-0 {
        margin-left: 0 !important;
    }

    .q-mb-xs-0 {
        margin-bottom: 0 !important;
    }

    .q-mr-xs-0 {
        margin-right: 0 !important;
    }

    .q-mr-xs-10 {
        margin-right: 10px !important;
    }

    .q-mt-xs-10 {
        margin-top: 10px !important;
    }

    .q-mt-xs-56 {
        margin-top: 56px !important;
    }

    .q-mb-xs-14 {
        margin-bottom: 14px !important;
    }

    .q-mr-xs-24 {
        margin-right: 24px !important;
    }

    .q-mb-xs-27 {
        margin-bottom: 27px !important;
    }

    .q-mb-xs-20 {
        margin-bottom: 20px !important;
    }

    .q-mb-xs-24 {
        margin-bottom: 24px !important;
    }

    .q-pt-xs-none {
        padding-top: 0 !important;
    }

    .q-pr-xs-none {
        padding-right: 0 !important;
    }

    .q-pb-xs-150 {
        padding-bottom: 150px !important;
    }

    .items-center-xs {
        align-items: center;
    }

    .justify-center-xs {
        justify-content: center !important;
    }

    .justify-between-xs {
        justify-content: space-between !important;
    }

    .relative-position-xs {
        position: relative;
    }

    .fs-xs-24 {
        font-size: 24px;
    }

    .fs-xs-14 {
        font-size: 14px;
    }

    .\!fs-xs-24 {
        font-size: 24px !important;
    }

    .text-center-xs {
        text-align: center;
    }

    .text-left-xs {
        text-align: left;
    }

    .text-end-xs {
        text-align: end;
    }

    .column-xs {
        flex-direction: column !important;
    }

    .items-end-xs {
        align-items: flex-end;
    }

    .row-cols-xs-1 {
        .col {
            width: 100% !important;
        }
    }

    .order-xs-1 {
        order: 1;
    }

    .order-xs-2 {
        order: 2;
    }

    .order-xs-3 {
        order: 3;
    }

    .mobile-fit-in-container {
        width: 100vw !important;
        margin-left: -30px !important;
    }

    .hidden-xs {
        display: none !important;
    }

    .block-xs {
        display: block !important;
    }

    .flex-xs {
        display: flex !important;
    }

    @each $k,
    $s in $custom-sizes {
        .grid-gap-min-xs-#{$k} {
            --grid-gap-offset: #{$s};
            gap: $s;
        }

        .grid-cols-min-xs-#{$k} {
            grid-template-columns: repeat($k, minmax(0, 1fr))
        }
    }
}

@media screen and (max-width: $breakpoint-sm) {
    .absolute-sm {
        position: absolute;
    }

    .q-mb-sm-14 {
        margin-bottom: 14px;
    }

    .q-mb-sm-30 {
        margin-bottom: 30px;
    }

    .justify-sm-center {
        justify-content: center;
    }

    .column-sm {
        flex-direction: column;
    }
}

@media screen and (min-width: $breakpoint-sm) and (max-width: $breakpoint-md) {
    .container {
        padding: 0 56px;
    }

    .q-pt-md-64 {
        padding-top: 64px !important;
    }

    .flex-between-md-half {
        flex: 0 0 calc(50% - var(--grid-gap-offset, 0) / 2);
    }
}

@media screen and (max-width: $breakpoint-md) {
    .text-left-md {
        text-align: left;
    }

    .q-mt-md-10 {
        margin-top: 10px !important;
    }

    .q-px-md-0 {
        padding-left: 0;
        padding-right: 0;
    }

    .flex-md-half {
        flex: 0 0 calc(50% - var(--grid-gap-offset, 0) / 2);
    }
}

@media screen and (min-width: $breakpoint-xs) {
    .w-xs-1\/3 {
        width: 1/3 * 100%;
    }

    .\!w-xs-1\/3 {
        width: 1/3 * 100% !important;
    }

    .\!w-xs-2\/3 {
        width: 2/3 * 100% !important;
    }
}

@media screen and (min-width: $breakpoint-sm) {
    .w-sm-1\/3 {
        width: 33%;
    }

    .w-sm-2\/3 {
        width: 66%;
    }

    .w-sm-1\/4 {
        width: 1/4 * 100%;
    }

    .\!w-sm-1\/4 {
        width: 1/4 * 100% !important;
    }

    .\!w-sm-3\/4 {
        width: 3/4 * 100% !important;
    }

    .q-pa-sm-20 {
        padding: 20px !important;
    }
}

@media screen and (min-width: $breakpoint-md) {
    .\!w-md-1\/6 {
        width: 17% !important;
    }

    .\!w-md-5\/6 {
        width: 83% !important;
    }

    .\!w-md-1\/3 {
        width: 33.33% !important;
    }

    .q-pr-md-5 {
        padding-right: 5px !important;
    }

    .q-pr-md-25 {
        padding-right: 25px !important;
    }

    .q-px-md-30 {
        padding-left: 30px !important;
        padding-right: 30px !important;
    }

    .q-py-md-40 {
        padding-top: 40px !important;
        padding-bottom: 40px !important;
    }

    .q-py-md-21 {
        padding-top: 21px !important;
        padding-bottom: 21px !important;
    }

    .q-py-md-20 {
        padding-top: 20px !important;
        padding-bottom: 20px !important;
    }

    .q-pa-md-36 {
        padding: 36px !important;
    }

    .q-mr-md-none {
        margin-right: none;
    }

    .q-mb-md-32 {
        margin-bottom: 32px;
    }

    .q-mt-md-34 {
        margin-top: 34px !important;
    }

    .q-mt-md-none {
        margin-top: 0 !important;
    }

    .justify-end-md {
        justify-content: flex-end !important;
    }

    .align-items-end-md {
        align-items: flex-end !important;
    }

    .items-center-md {
        align-items: center !important;
    }

    .row-md {
        flex-direction: row !important;
    }

    @each $k,
    $s in $custom-sizes {
        .grid-gap-md-#{$k} {
            --grid-gap-offset: #{$s};
            gap: $s;
        }

        .grid-cols-md-#{$k} {
            grid-template-columns: repeat($k, minmax(0, 1fr))
        }

        .col-span-md-#{$k} {
            grid-column: span $k / span $k;
        }
    
        .col-start-md-#{$k} {
            grid-column-start: $k !important;
        }

        .col-start-span-md-#{$k} {
            grid-column-start: span $k !important;
        }

        .col-end-md-#{$k} {
            grid-column-end: $k !important;
        }
    }
}

@media screen and (min-width: $breakpoint-lg) {
    .w-lg-1\/6 {
        width: 17%;
    }

    .w-lg-5\/6 {
        width: 83%;
    }

    .\!w-lg-1\/3 {
        width: 33.33% !important;
    }

    .flex-lg-1 {
        flex: 1;
    }

    .justify-end-lg {
        justify-content: flex-end !important;
    }

    @each $k,
    $s in $custom-sizes {
        .grid-gap-lg-#{$k} {
            --grid-gap-offset: #{$s};
            gap: $s;
        }

        .grid-cols-lg-#{$k} {
            grid-template-columns: repeat($k, minmax(0, 1fr))
        }
    }
}